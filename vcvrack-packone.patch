diff --git a/src/Goto.cpp b/src/Goto.cpp
index aba4db5..31ec0e4 100644
--- a/src/Goto.cpp
+++ b/src/Goto.cpp
@@ -164,7 +164,8 @@ struct GotoContainer : widget::Widget {
 	int learnJumpPoint = -1;
 
 	GotoContainer() {
-		divider.setDivision(APP->window->getMonitorRefreshRate());
+//		divider.setDivision(APP->window->getMonitorRefreshRate());
+		divider.setDivision(settings::frameRateLimit);
 	}
 
 	void step() override {
@@ -238,10 +239,12 @@ struct GotoContainer : widget::Widget {
 				if (module->smoothTransition) {
 					float zoom = !module->ignoreZoom ? module->jumpPoints[i].zoom : rack::settings::zoom;
 					if (module->centerModule) {
-						viewportCenterSmooth.trigger(mw, zoom, APP->window->getLastFrameRate());
+//						viewportCenterSmooth.trigger(mw, zoom, APP->window->getLastFrameRate());
+						viewportCenterSmooth.trigger(mw, zoom, settings::frameRateLimit);
 					}
 					else {
-						viewportCenterSmooth.trigger(Vec(module->jumpPoints[i].x, module->jumpPoints[i].y), zoom, APP->window->getLastFrameRate());
+//						viewportCenterSmooth.trigger(Vec(module->jumpPoints[i].x, module->jumpPoints[i].y), zoom, APP->window->getLastFrameRate());
+						viewportCenterSmooth.trigger(Vec(module->jumpPoints[i].x, module->jumpPoints[i].y), zoom, settings::frameRateLimit);
 					}
 				}
 				else {
@@ -285,7 +288,8 @@ struct GotoButton : LEDButton {
 	void step() override {
 		if (paramQuantity) {
 			lpb.param = paramQuantity->getParam();
-			switch (lpb.process(1.f / APP->window->getLastFrameRate())) {
+//			switch (lpb.process(1.f / APP->window->getLastFrameRate())) {
+			switch (lpb.process(1.f / settings::frameRateLimit)) {
 				default:
 				case LongPressButton::NO_PRESS:
 					break;
 
